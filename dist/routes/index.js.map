{"version":3,"sources":["../../routes/index.js"],"names":["express","require","router","Router","_","request","get","req","res","next","render","title","query","process","env","VERIFY_TOKEN","console","log","status","send","error","sendStatus","post","data","body","object","entry","forEach","pageID","id","timeOfEvent","time","messaging","event","message","receivedMessage","postback","receivedPostback","senderID","sender","recipientID","recipient","timeOfMessage","timestamp","JSON","stringify","messageID","messageText","text","messageAttachment","attachments","sendGenericMessage","sendTextMessage","messageData","recipientId","attachment","type","payload","template_type","elements","subtitle","item_url","image_url","buttons","url","callSendAPI","uri","qs","access_token","PAGE_ACCESS_TOKEN","method","json","response","statusCode","recipient_id","messageId","message_id","timeOfPostback","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\nlet express = require('express');\nlet router = express.Router();\nlet _ = require('lodash')\nlet request = require('request')\n/* GET home page. */\nrouter.get('/', function (req, res, next) {\n    res.render('index', {title: 'Ignite AI'});\n});\n\nrouter.get('/webhook', function (req, res) {\n    if(req.query['hub.mode'] === 'subscribe' &&\n        req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n        console.log(\"Validating webhook\");\n        res.status(200).send(req.query['hub.challenge']);\n    } else {\n        console.error(\"Failed validation. Make sure the validation tokens match.\");\n        res.sendStatus(403);\n    }\n});\n\nrouter.post('/webhook', (req, res, next) => {\n    \n    let data = req.body;\n    \n    if(data.object === 'page') {\n        \n        data.entry.forEach((entry) => {\n            \n            let pageID = entry.id;\n            let timeOfEvent = entry.time;\n            \n            entry.messaging.forEach((event) => {\n                console.log(event)\n                if(event.message) {\n                    receivedMessage(event)\n                } else if(event.postback) {\n                    receivedPostback(event);\n                } else {\n                    console.log(\"Webhook received unkown event: %s\", event)\n                }\n                \n            })\n            \n        });\n        \n    }\n    \n    res.sendStatus(200);\n    \n})\n\nfunction receivedMessage(event) {\n    console.log('Message data: %s', event.data)\n    \n    let senderID = event.sender.id;\n    let recipientID = event.recipient.id;\n    let timeOfMessage = event.timestamp;\n    let message = event.message;\n    console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n    console.log(JSON.stringify(message));\n    \n    let messageID = message.id;\n    let messageText = message.text;\n    let messageAttachment = message.attachments;\n    if(messageText) {\n        \n        switch (messageText) {\n            case 'generic':\n                sendGenericMessage(senderID);\n                break;\n            default:\n                sendTextMessage(senderID, messageText);\n                break;\n        }\n        \n    }\n    \n}\n\nfunction sendGenericMessage(recipientID) {\n    // let messageData = {\n    //     recipient: {\n    //         id: recipientID,\n    //     },\n    //     message: {\n    //         attachment: {\n    //             type: 'template',\n    //             payload: {\n    //                 template_type: 'generic',\n    //                 elements: [{\n    //                     title: 'rift',\n    //                     subtitle: 'Next-generation marketing AI',\n    //                     item_url: process.env.IGNITEAI_URI,\n    //                     image_url: process.env.IGNITEAI_URI + '/images/ss.png',\n    //                     buttons: [{\n    //                         type: 'web_url',\n    //                         url: process.env.IGNITEAI_URI,\n    //                         title: 'Open web url'\n    //                     }, {\n    //                         type: 'postback',\n    //                         title: 'Call Postback',\n    //                         payload: 'Payload for first bubble'\n    //                     }]\n    //                 }, {\n    //                     title: \"touch\",\n    //                     subtitle: \"Your Hands, Now in Ignite AI\",\n    //                     item_url: process.env.IGNITEAI_URI + '/ignite',\n    //                     image_url: process.env.IGNITEAI_URI + '/images/ss.png',\n    //                     buttons: [{\n    //                         type: \"web_url\",\n    //                         item_url: process.env.IGNITEAI_URI + '/ignite',\n    //                         title: \"Open Web URL\"\n    //                     }, {\n    //                         type: \"postback\",\n    //                         title: \"Call Postback\",\n    //                         payload: \"Payload for second bubble\",\n    //                     }]\n    //                 }]\n    //\n    //             }\n    //         }\n    //     }\n    // };\n    var messageData = {\n        recipient: {\n            id: recipientId\n        },\n        message: {\n            attachment: {\n                type: \"template\",\n                payload: {\n                    template_type: \"generic\",\n                    elements: [{\n                        title: \"rift\",\n                        subtitle: \"Next-generation virtual reality\",\n                        item_url: \"https://www.oculus.com/en-us/rift/\",\n                        image_url: \"http://messengerdemo.parseapp.com/img/rift.png\",\n                        buttons: [{\n                            type: \"web_url\",\n                            url: \"https://www.oculus.com/en-us/rift/\",\n                            title: \"Open Web URL\"\n                        }, {\n                            type: \"postback\",\n                            title: \"Call Postback\",\n                            payload: \"Payload for first bubble\",\n                        }],\n                    }, {\n                        title: \"touch\",\n                        subtitle: \"Your Hands, Now in VR\",\n                        item_url: \"https://www.oculus.com/en-us/touch/\",\n                        image_url: \"http://messengerdemo.parseapp.com/img/touch.png\",\n                        buttons: [{\n                            type: \"web_url\",\n                            url: \"https://www.oculus.com/en-us/touch/\",\n                            title: \"Open Web URL\"\n                        }, {\n                            type: \"postback\",\n                            title: \"Call Postback\",\n                            payload: \"Payload for second bubble\",\n                        }]\n                    }]\n                }\n            }\n        }\n    };\n    \n    callSendAPI(messageData);\n}\n\nfunction sendTextMessage(recipientID, messageText) {\n    let messageData = {\n        recipient: {\n            id: recipientID,\n        },\n        message: {\n            text: messageText\n        }\n    };\n    callSendAPI(messageData);\n}\n\nfunction callSendAPI(messageData) {\n    \n    request({\n        uri: 'https://graph.facebook.com/v2.6/me/messages',\n        qs: {access_token: process.env.PAGE_ACCESS_TOKEN},\n        method: 'POST',\n        json: messageData\n    }, (error, response, body) => {\n        if(!error && response.statusCode === 200) {\n            let recipientId = body.recipient_id;\n            let messageId = body.message_id;\n            console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n            \n        } else {\n            console.error('Unable to send message.')\n            console.error(response);\n            console.error(error);\n        }\n    })\n    \n}\n\nfunction receivedPostback(event) {\n    let senderID = event.sender.id;\n    let recipientID = event.recipient.id;\n    let timeOfPostback = event.timestamp;\n    let payload = event.postback.payload;\n    console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n    sendTextMessage(senderID, \"Postback celled\");\n}\n\nmodule.exports = router;\n"]}